#!/usr/bin/env python
#
# Copyright 2011 Free Software Foundation, Inc.
#
# This file is part of GNU Radio
#
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
#

# -*- coding: UTF-8 -*-
# generated by wxGlade 0.4 on Mon Jan  2 19:02:03 2006

import wx

class ui_frame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ui_frame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.sizer_1_staticbox = wx.StaticBox(self, -1, "sizer_1")
        self.freq_disp = wx.SpinCtrl(self, -1, "", min=0, max=100)
        self.spin_e6 = wx.SpinButton(self, -1 )
        self.spin_e5 = wx.SpinButton(self, -1 )
        self.spin_e4 = wx.SpinButton(self, -1 )
        self.spin_e3 = wx.SpinButton(self, -1 )
        self.spin_e2 = wx.SpinButton(self, -1 )
        self.spin_e1 = wx.SpinButton(self, -1 )
        self.spin_e0 = wx.SpinButton(self, -1 )
        self.panel_1 = wx.Panel(self, -1)
        self.panel_2 = wx.Panel(self, -1)
        self.button_lsb = wx.Button(self, -1, "LSB")
        self.button_usb = wx.Button(self, -1, "USB")
        self.button_am = wx.Button(self, -1, "AM")
        self.label_1 = wx.StaticText(self, -1, "VOLUME")
        self.label_2 = wx.StaticText(self, -1, "PGA")
        self.agc_level = wx.TextCtrl(self, -1, "")
        self.label_6 = wx.StaticText(self, -1, "")
        self.volume = wx.SpinCtrl(self, -1, "", min=0, max=100)
        self.pga = wx.SpinCtrl(self, -1, "", min=0, max=100)
        self.agc_max = wx.TextCtrl(self, -1, "")
        self.label_7 = wx.StaticText(self, -1, "")
        self.label_4 = wx.StaticText(self, -1, "AGC AUTHORITY")
        self.label_5 = wx.StaticText(self, -1, "AGC REF LVL")
        self.label_3 = wx.StaticText(self, -1, "BANDWIDTH")
        self.label_8 = wx.StaticText(self, -1, "")
        self.agc_gain = wx.TextCtrl(self, -1, "")
        self.agc_gain_s = wx.SpinButton(self, -1 )
        self.agc_ref = wx.TextCtrl(self, -1, "")
        self.agc_ref_s = wx.SpinButton(self, -1 )
        self.bandwidth = wx.TextCtrl(self, -1, "")
        self.bw_spin = wx.SpinButton(self, -1 )
        self.label_9 = wx.StaticText(self, -1, "")
        self.rssi = wx.Gauge(self, -1, 10, style=wx.GA_HORIZONTAL|wx.GA_SMOOTH)
        self.fe_panel = wx.Panel(self, -1)
        self.if_panel = wx.Panel(self, -1)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_SPINCTRL, self.tune_evt, self.freq_disp)
        self.Bind(wx.EVT_SPIN_DOWN, self.down_e6, self.spin_e6)
        self.Bind(wx.EVT_SPIN_UP, self.up_e6, self.spin_e6)
        self.Bind(wx.EVT_SPIN_DOWN, self.down_e5, self.spin_e5)
        self.Bind(wx.EVT_SPIN_UP, self.up_e5, self.spin_e5)
        self.Bind(wx.EVT_SPIN_DOWN, self.down_e4, self.spin_e4)
        self.Bind(wx.EVT_SPIN_UP, self.up_e4, self.spin_e4)
        self.Bind(wx.EVT_SPIN_DOWN, self.down_e3, self.spin_e3)
        self.Bind(wx.EVT_SPIN_UP, self.up_e3, self.spin_e3)
        self.Bind(wx.EVT_SPIN_DOWN, self.down_e2, self.spin_e2)
        self.Bind(wx.EVT_SPIN_UP, self.up_e2, self.spin_e2)
        self.Bind(wx.EVT_SPIN_DOWN, self.down_e1, self.spin_e1)
        self.Bind(wx.EVT_SPIN_UP, self.up_e1, self.spin_e1)
        self.Bind(wx.EVT_SPIN_DOWN, self.down_e0, self.spin_e0)
        self.Bind(wx.EVT_SPIN_UP, self.up_e0, self.spin_e0)
        self.Bind(wx.EVT_BUTTON, self.set_lsb, self.button_lsb)
        self.Bind(wx.EVT_BUTTON, self.set_usb, self.button_usb)
        self.Bind(wx.EVT_BUTTON, self.set_am, self.button_am)
        self.Bind(wx.EVT_SPINCTRL, self.event_vol, self.volume)
        self.Bind(wx.EVT_SPINCTRL, self.event_pga, self.pga)
        self.Bind(wx.EVT_SPIN_DOWN, self.agc_gain_down, self.agc_gain_s)
        self.Bind(wx.EVT_SPIN_UP, self.agc_gain_up, self.agc_gain_s)
        self.Bind(wx.EVT_SPIN_DOWN, self.agc_ref_down, self.agc_ref_s)
        self.Bind(wx.EVT_SPIN_UP, self.agc_ref_up, self.agc_ref_s)
        self.Bind(wx.EVT_SPIN_DOWN, self.bw_down, self.bw_spin)
        self.Bind(wx.EVT_SPIN_UP, self.bw_up, self.bw_spin)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: ui_frame.__set_properties
        self.SetTitle("frame_1")
        self.freq_disp.SetFont(wx.Font(32, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.rssi.SetMinSize((315, 10))
        self.rssi.SetForegroundColour(wx.Colour(255, 0, 0))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ui_frame.__do_layout
        sizer_1 = wx.StaticBoxSizer(self.sizer_1_staticbox, wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_4 = wx.GridSizer(2, 4, 0, 0)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_3 = wx.GridSizer(2, 4, 0, 0)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(2, 3, 0, 0)
        grid_sizer_2 = wx.GridSizer(1, 7, 0, 0)
        sizer_3.Add(self.freq_disp, 1, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        grid_sizer_2.Add(self.spin_e6, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_2.Add(self.spin_e5, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_2.Add(self.spin_e4, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_2.Add(self.spin_e3, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_2.Add(self.spin_e2, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_2.Add(self.spin_e1, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_2.Add(self.spin_e0, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(grid_sizer_2, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.panel_1, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.panel_2, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_lsb, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.button_usb, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.button_am, 0, wx.ADJUST_MINSIZE, 0)
        sizer_3.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_3, 1, wx.EXPAND, 0)
        grid_sizer_3.Add(self.label_1, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_3.Add(self.label_2, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_3.Add(self.agc_level, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_3.Add(self.label_6, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_3.Add(self.volume, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_3.Add(self.pga, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_3.Add(self.agc_max, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_3.Add(self.label_7, 0, wx.ADJUST_MINSIZE, 0)
        sizer_4.Add(grid_sizer_3, 1, wx.EXPAND, 0)
        grid_sizer_4.Add(self.label_4, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_4.Add(self.label_5, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_4.Add(self.label_3, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_4.Add(self.label_8, 0, wx.ADJUST_MINSIZE, 0)
        sizer_6.Add(self.agc_gain, 0, wx.ADJUST_MINSIZE, 0)
        sizer_6.Add(self.agc_gain_s, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_4.Add(sizer_6, 1, wx.EXPAND, 0)
        sizer_7.Add(self.agc_ref, 0, wx.ADJUST_MINSIZE, 0)
        sizer_7.Add(self.agc_ref_s, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_4.Add(sizer_7, 1, wx.EXPAND, 0)
        sizer_5.Add(self.bandwidth, 0, wx.ADJUST_MINSIZE, 0)
        sizer_5.Add(self.bw_spin, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_4.Add(sizer_5, 1, wx.EXPAND, 0)
        grid_sizer_4.Add(self.label_9, 0, wx.ADJUST_MINSIZE, 0)
        sizer_4.Add(grid_sizer_4, 1, wx.EXPAND, 0)
        sizer_4.Add(self.rssi, 1, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        sizer_2.Add(sizer_4, 1, wx.EXPAND, 0)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        sizer_1.Add(self.fe_panel, 1, wx.EXPAND, 0)
        sizer_1.Add(self.if_panel, 1, wx.EXPAND, 0)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        sizer_1.SetSizeHints(self)
        self.Layout()
        # end wxGlade

    def down_e6(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `down_e6' not implemented"
        event.Skip()

    def up_e6(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `up_e6' not implemented"
        event.Skip()

    def down_e5(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `down_e5' not implemented"
        event.Skip()

    def up_e5(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `up_e5' not implemented"
        event.Skip()

    def down_e4(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `down_e4' not implemented"
        event.Skip()

    def up_e4(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `up_e4' not implemented"
        event.Skip()

    def down_e3(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `down_e3' not implemented"
        event.Skip()

    def up_e3(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `up_e3' not implemented"
        event.Skip()

    def down_e2(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `down_e2' not implemented"
        event.Skip()

    def up_e2(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `up_e2' not implemented"
        event.Skip()

    def down_e1(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `down_e1' not implemented"
        event.Skip()

    def up_e1(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `up_e1' not implemented"
        event.Skip()

    def down_e0(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `down_e0' not implemented"
        event.Skip()

    def up_e0(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `up_e0' not implemented"
        event.Skip()

    def event_vol(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `event_vol' not implemented"
        event.Skip()

    def event_pga(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `event_pga' not implemented"
        event.Skip()

    def set_lsb(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `set_lsb' not implemented"
        event.Skip()

    def set_usb(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `set_usb' not implemented"
        event.Skip()

    def set_am(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `set_am' not implemented"
        event.Skip()

    def set_bw(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `set_bw' not implemented"
        event.Skip()

    def tune_evt(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `tune_evt' not implemented"
        event.Skip()

    def bw_down(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `bw_down' not implemented"
        event.Skip()

    def bw_up(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `bw_up' not implemented"
        event.Skip()

    def agc_gain_down(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `agc_gain_down' not implemented"
        event.Skip()

    def agc_gain_up(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `agc_gain_up' not implemented"
        event.Skip()

    def agc_ref_down(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `agc_ref_down' not implemented"
        event.Skip()

    def agc_ref_up(self, event): # wxGlade: ui_frame.<event_handler>
        print "Event handler `agc_ref_up' not implemented"
        event.Skip()

# end of class ui_frame


class RadioFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # content of this block not found: did you rename this class?
        pass

    def __set_properties(self):
        # content of this block not found: did you rename this class?
        pass

    def __do_layout(self):
        # content of this block not found: did you rename this class?
        pass

# end of class RadioFrame


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # content of this block not found: did you rename this class?
        pass

    def __set_properties(self):
        # content of this block not found: did you rename this class?
        pass

    def __do_layout(self):
        # content of this block not found: did you rename this class?
        pass

# end of class MyFrame


